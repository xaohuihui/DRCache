// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: rpcpb.proto

package rpcpb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *GetParam) Reset() {
	*x = GetParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpcpb_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetParam) ProtoMessage() {}

func (x *GetParam) ProtoReflect() protoreflect.Message {
	mi := &file_rpcpb_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetParam.ProtoReflect.Descriptor instead.
func (*GetParam) Descriptor() ([]byte, []int) {
	return file_rpcpb_proto_rawDescGZIP(), []int{0}
}

func (x *GetParam) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type GetRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GetRes) Reset() {
	*x = GetRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpcpb_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRes) ProtoMessage() {}

func (x *GetRes) ProtoReflect() protoreflect.Message {
	mi := &file_rpcpb_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRes.ProtoReflect.Descriptor instead.
func (*GetRes) Descriptor() ([]byte, []int) {
	return file_rpcpb_proto_rawDescGZIP(), []int{1}
}

func (x *GetRes) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type SetParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key     string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value   []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Timeout uint64 `protobuf:"varint,3,opt,name=timeout,proto3" json:"timeout,omitempty"`
}

func (x *SetParam) Reset() {
	*x = SetParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpcpb_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetParam) ProtoMessage() {}

func (x *SetParam) ProtoReflect() protoreflect.Message {
	mi := &file_rpcpb_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetParam.ProtoReflect.Descriptor instead.
func (*SetParam) Descriptor() ([]byte, []int) {
	return file_rpcpb_proto_rawDescGZIP(), []int{2}
}

func (x *SetParam) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *SetParam) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *SetParam) GetTimeout() uint64 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

type SetRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok  bool   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Mes []byte `protobuf:"bytes,2,opt,name=mes,proto3" json:"mes,omitempty"`
}

func (x *SetRes) Reset() {
	*x = SetRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpcpb_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRes) ProtoMessage() {}

func (x *SetRes) ProtoReflect() protoreflect.Message {
	mi := &file_rpcpb_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRes.ProtoReflect.Descriptor instead.
func (*SetRes) Descriptor() ([]byte, []int) {
	return file_rpcpb_proto_rawDescGZIP(), []int{3}
}

func (x *SetRes) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *SetRes) GetMes() []byte {
	if x != nil {
		return x.Mes
	}
	return nil
}

var File_rpcpb_proto protoreflect.FileDescriptor

var file_rpcpb_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x72, 0x70, 0x63, 0x70, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x72,
	0x70, 0x63, 0x70, 0x62, 0x22, 0x1c, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x22, 0x1e, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x4c, 0x0a, 0x08, 0x53, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x22, 0x2a, 0x0a, 0x06, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6d, 0x65, 0x73, 0x32, 0x70, 0x0a, 0x0a,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x30, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x0f, 0x2e, 0x72,
	0x70, 0x63, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x1a, 0x0d, 0x2e,
	0x72, 0x70, 0x63, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x0e,
	0x53, 0x65, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x0f,
	0x2e, 0x72, 0x70, 0x63, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x1a,
	0x0d, 0x2e, 0x72, 0x70, 0x63, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x42, 0x0a,
	0x5a, 0x08, 0x2e, 0x2f, 0x3b, 0x72, 0x70, 0x63, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_rpcpb_proto_rawDescOnce sync.Once
	file_rpcpb_proto_rawDescData = file_rpcpb_proto_rawDesc
)

func file_rpcpb_proto_rawDescGZIP() []byte {
	file_rpcpb_proto_rawDescOnce.Do(func() {
		file_rpcpb_proto_rawDescData = protoimpl.X.CompressGZIP(file_rpcpb_proto_rawDescData)
	})
	return file_rpcpb_proto_rawDescData
}

var file_rpcpb_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_rpcpb_proto_goTypes = []interface{}{
	(*GetParam)(nil), // 0: rpcpb.GetParam
	(*GetRes)(nil),   // 1: rpcpb.GetRes
	(*SetParam)(nil), // 2: rpcpb.SetParam
	(*SetRes)(nil),   // 3: rpcpb.SetRes
}
var file_rpcpb_proto_depIdxs = []int32{
	0, // 0: rpcpb.GroupCache.GetRemoteValue:input_type -> rpcpb.GetParam
	2, // 1: rpcpb.GroupCache.SetRemoteValue:input_type -> rpcpb.SetParam
	1, // 2: rpcpb.GroupCache.GetRemoteValue:output_type -> rpcpb.GetRes
	3, // 3: rpcpb.GroupCache.SetRemoteValue:output_type -> rpcpb.SetRes
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_rpcpb_proto_init() }
func file_rpcpb_proto_init() {
	if File_rpcpb_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rpcpb_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpcpb_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpcpb_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpcpb_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rpcpb_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rpcpb_proto_goTypes,
		DependencyIndexes: file_rpcpb_proto_depIdxs,
		MessageInfos:      file_rpcpb_proto_msgTypes,
	}.Build()
	File_rpcpb_proto = out.File
	file_rpcpb_proto_rawDesc = nil
	file_rpcpb_proto_goTypes = nil
	file_rpcpb_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GroupCacheClient is the client API for GroupCache service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GroupCacheClient interface {
	GetRemoteValue(ctx context.Context, in *GetParam, opts ...grpc.CallOption) (*GetRes, error)
	SetRemoteValue(ctx context.Context, in *SetParam, opts ...grpc.CallOption) (*SetRes, error)
}

type groupCacheClient struct {
	cc grpc.ClientConnInterface
}

func NewGroupCacheClient(cc grpc.ClientConnInterface) GroupCacheClient {
	return &groupCacheClient{cc}
}

func (c *groupCacheClient) GetRemoteValue(ctx context.Context, in *GetParam, opts ...grpc.CallOption) (*GetRes, error) {
	out := new(GetRes)
	err := c.cc.Invoke(ctx, "/rpcpb.GroupCache/GetRemoteValue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *groupCacheClient) SetRemoteValue(ctx context.Context, in *SetParam, opts ...grpc.CallOption) (*SetRes, error) {
	out := new(SetRes)
	err := c.cc.Invoke(ctx, "/rpcpb.GroupCache/SetRemoteValue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GroupCacheServer is the server API for GroupCache service.
type GroupCacheServer interface {
	GetRemoteValue(context.Context, *GetParam) (*GetRes, error)
	SetRemoteValue(context.Context, *SetParam) (*SetRes, error)
}

// UnimplementedGroupCacheServer can be embedded to have forward compatible implementations.
type UnimplementedGroupCacheServer struct {
}

func (*UnimplementedGroupCacheServer) GetRemoteValue(context.Context, *GetParam) (*GetRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRemoteValue not implemented")
}
func (*UnimplementedGroupCacheServer) SetRemoteValue(context.Context, *SetParam) (*SetRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetRemoteValue not implemented")
}

func RegisterGroupCacheServer(s *grpc.Server, srv GroupCacheServer) {
	s.RegisterService(&_GroupCache_serviceDesc, srv)
}

func _GroupCache_GetRemoteValue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetParam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GroupCacheServer).GetRemoteValue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.GroupCache/GetRemoteValue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GroupCacheServer).GetRemoteValue(ctx, req.(*GetParam))
	}
	return interceptor(ctx, in, info, handler)
}

func _GroupCache_SetRemoteValue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetParam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GroupCacheServer).SetRemoteValue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.GroupCache/SetRemoteValue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GroupCacheServer).SetRemoteValue(ctx, req.(*SetParam))
	}
	return interceptor(ctx, in, info, handler)
}

var _GroupCache_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpcpb.GroupCache",
	HandlerType: (*GroupCacheServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetRemoteValue",
			Handler:    _GroupCache_GetRemoteValue_Handler,
		},
		{
			MethodName: "SetRemoteValue",
			Handler:    _GroupCache_SetRemoteValue_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rpcpb.proto",
}
